#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h
      - name: 自定义插件主题。
        run: |
         cd package
         mkdir openwrt-packages
          cd openwrt-packages
          # git clone https://github.com/xiaorouji/openwrt-passwall.git
          git clone https://github.com/kenzok8/openwrt-packages.git
          git clone https://github.com/kenzok8/small.git
          # git clone https://github.com/rufengsuixing/luci-app-adguardhome.git
          # git clone https://github.com/AdguardTeam/AdGuardHome.git
          # git clone https://github.com/ujincn/smartdns.git
          # git clone https://github.com/ujincn/luci-app-smartdns-compat.git
          # git clone https://github.com/honwen/luci-app-aliddns.git


      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_bcm47xx=y
          CONFIG_TARGET_bcm47xx_mips74k=y
          CONFIG_TARGET_bcm47xx_mips74k_DEVICE_asus_rt-n16=y
          # 基本包
          CONFIG_PACKAGE_base-files=y
          CONFIG_PACKAGE_busybox=y
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_cgi-io=y
          CONFIG_PACKAGE_dnsmasq=y
          CONFIG_PACKAGE_dropbear=y
          CONFIG_PACKAGE_firewall=y
          CONFIG_PACKAGE_fstools=y
          CONFIG_PACKAGE_fwtool=y
          CONFIG_PACKAGE_getrandom=y
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_iptables=y
          CONFIG_PACKAGE_iw=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_jshn=y
          CONFIG_PACKAGE_jsonfilter=y
          CONFIG_PACKAGE_kerne=y
          CONFIG_PACKAGE_kmod-b43=y
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_kmod-gpio-button-hotplug=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-conntrack=y
          CONFIG_PACKAGE_kmod-ipt-core=y
          CONFIG_PACKAGE_kmod-ipt-nat=y
          CONFIG_PACKAGE_kmod-ipt-offload=y
          CONFIG_PACKAGE_kmod-leds-gpio=y
          CONFIG_PACKAGE_kmod-lib-cordic=y
          CONFIG_PACKAGE_kmod-lib-crc-ccitt=y
          CONFIG_PACKAGE_kmod-mac80211=y
          CONFIG_PACKAGE_kmod-nf-conntrack=y
          CONFIG_PACKAGE_kmod-nf-conntrack6=y
          CONFIG_PACKAGE_kmod-nf-flow=y
          CONFIG_PACKAGE_kmod-nf-ipt=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-nat=y
          CONFIG_PACKAGE_kmod-nf-reject=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-nls-base=y
          CONFIG_PACKAGE_kmod-ppp=y
          CONFIG_PACKAGE_kmod-pppoe=y
          CONFIG_PACKAGE_kmod-pppox=y
          CONFIG_PACKAGE_kmod-slhc=y
          CONFIG_PACKAGE_kmod-usb-bcma=y
          CONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb-ehci=y
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ssb=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_libblobmsg-json20210516=y
          CONFIG_PACKAGE_libc=y
          CONFIG_PACKAGE_libgcc1=y
          CONFIG_PACKAGE_libip4tc2=y
          CONFIG_PACKAGE_libip6tc2=y
          CONFIG_PACKAGE_libiwinfo-data=y
          CONFIG_PACKAGE_libiwinfo-lua=y
          CONFIG_PACKAGE_libiwinfo20210430=y
          CONFIG_PACKAGE_libjson-c5=y
          CONFIG_PACKAGE_libjson-script20210516=y
          CONFIG_PACKAGE_liblua5.1.5=y
          CONFIG_PACKAGE_liblucihttp-lua=y
          CONFIG_PACKAGE_liblucihttp0=y
          CONFIG_PACKAGE_libnl-tiny1=y
          CONFIG_PACKAGE_libpthread=y
          CONFIG_PACKAGE_libubox20210516=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_libubus20210630=y
          CONFIG_PACKAGE_libuci20130104=y
          CONFIG_PACKAGE_libuclient20201210=y
          CONFIG_PACKAGE_libustream-wolfssl20201210=y
          CONFIG_PACKAGE_libwolfssl4.7.0.66253b90=y
          CONFIG_PACKAGE_libxtables12=y
          CONFIG_PACKAGE_logd=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
          CONFIG_PACKAGE_luci-lib-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-ssl=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_mtd=y
          CONFIG_PACKAGE_netifd=y
          CONFIG_PACKAGE_nvram=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_openwrt-keyring=y
          CONFIG_PACKAGE_opkg=y
          CONFIG_PACKAGE_otrx=y
          CONFIG_PACKAGE_ppp=y
          # 固件压缩:
          # cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_GZIP=y
          # EOF
          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF
          # IPv6支持:
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # 多文件系统支持:
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # USB3.0支持:
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # CONFIG_PACKAGE_kmod-usb-core=y
          # CONFIG_PACKAGE_kmod-usb-storage=y
          # CONFIG_PACKAGE_kmod-usb-storage-extras=y
          # CONFIG_PACKAGE_kmod-usb-storage0extras=y
          # CONFIG_PACKAGE_kmod-usb-uhci=y
          # 常用LuCI插件选择:
          # CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-lib-docker=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
          # CONFIG_PACKAGE_luci-app-wireguard=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-passwall=y
          # CONFIG_PACKAGE_luci-app-smartdns-compat=y
          # CONFIG_PACKAGE_luci-app-smartdns=y
          # CONFIG_PACKAGE_luci-app-adguardhome=y
          # CONFIG_PACKAGE_luci-app-aliddns=y
          # CONFIG_PACKAGE_aliyundrive-webdav=y
          # CONFIG_PACKAGE_luci-app-samba4=y
          # CONFIG_PACKAGE_luci-app-diskman=y
          # LuCI主题:
          # CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          # EOF
          # 常用软件包:
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # CONFIG_PACKAGE_AdGuardHome=y
          # CONFIG_PACKAGE_smartdns=y
          # passwall依赖库
          CONFIG_PACKAGE_brook=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_hysteria=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_kcptun=y
          CONFIG_PACKAGE_openssl1.1=y
          CONFIG_PACKAGE_pdnsd-alt=y
          CONFIG_PACKAGE_shadowsocks-rust=y
          CONFIG_PACKAGE_shadowsocksr-libev=y
          CONFIG_PACKAGE_simple-obfs=y
          CONFIG_PACKAGE_ssocks=y
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_xray-plugin=y
          EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF
          # 
          # ========================固件定制部分结束========================
          # 
          
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true

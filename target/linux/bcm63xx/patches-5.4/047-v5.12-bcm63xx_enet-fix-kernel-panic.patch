From 90eda07518ea7e8d1b3e6445eb3633eef9f65218 Mon Sep 17 00:00:00 2001
From: Sieng Piaw Liew <liew.s.piaw@gmail.com>
Date: Mon, 22 Feb 2021 09:15:12 +0800
Subject: [PATCH net] bcm63xx_enet: fix sporadic kernel panic

In ndo_stop functions, netdev_completed_queue() is called during forced
tx reclaim, after netdev_reset_queue(). This may trigger kernel panic if
there is any tx skb left.

This patch moves netdev_reset_queue() to after tx reclaim, so BQL can
complete successfully then reset.

Signed-off-by: Sieng Piaw Liew <liew.s.piaw@gmail.com>
Acked-by: Florian Fainelli <f.fainelli@gmail.com>
Fixes: 4c59b0f5543d ("bcm63xx_enet: add BQL support")
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
---
 drivers/net/ethernet/broadcom/bcm63xx_enet.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/broadcom/bcm63xx_enet.c
+++ b/drivers/net/ethernet/broadcom/bcm63xx_enet.c
@@ -1105,6 +1105,8 @@ static int bcm_enet_open(struct net_devi
 	else
 		bcm_enet_adjust_link(dev);
 
+	netdev_reset_queue(dev);
+
 	netif_start_queue(dev);
 	return 0;
 
@@ -1193,7 +1195,6 @@ static int bcm_enet_stop(struct net_devi
 	kdev = &priv->pdev->dev;
 
 	netif_stop_queue(dev);
-	netdev_reset_queue(dev);
 	napi_disable(&priv->napi);
 	if (priv->has_phy)
 		phy_stop(dev->phydev);
@@ -2267,6 +2268,7 @@ static int bcm_enetsw_open(struct net_de
 	enet_dmac_writel(priv, ENETDMAC_IR_PKTDONE_MASK,
 			 ENETDMAC_IRMASK, priv->tx_chan);
 
+	netdev_reset_queue(dev);
 	netif_carrier_on(dev);
 	netif_start_queue(dev);
 
@@ -2348,7 +2350,6 @@ static int bcm_enetsw_stop(struct net_de
 
 	del_timer_sync(&priv->swphy_poll);
 	netif_stop_queue(dev);
-	netdev_reset_queue(dev);
 	napi_disable(&priv->napi);
 	del_timer_sync(&priv->rx_timeout);
 

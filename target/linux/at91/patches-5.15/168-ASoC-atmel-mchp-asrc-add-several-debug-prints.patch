From be4d89d99bce5bfda0b5af2141e9100c2496f4da Mon Sep 17 00:00:00 2001
From: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date: Tue, 19 Apr 2022 11:29:43 +0300
Subject: [PATCH 059/471] ASoC: atmel: mchp-asrc: add several debug prints

Several debug prints are added to print the DMA transfer to users-space
parameters

Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
---
 sound/soc/atmel/mchp-asrc-dma.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/sound/soc/atmel/mchp-asrc-dma.c b/sound/soc/atmel/mchp-asrc-dma.c
index 1e6eb1d50bac..7abf9cc8d17c 100644
--- a/sound/soc/atmel/mchp-asrc-dma.c
+++ b/sound/soc/atmel/mchp-asrc-dma.c
@@ -258,7 +258,8 @@ static void mchp_asrc_start_handle(unsigned long data)
 		dma_async_issue_pending(dma_be_priv->desc->chan);
 }
 
-static int mchp_asrc_dmaengine_pcm_prepare_slave_config(struct snd_pcm_substream *substream,
+static int mchp_asrc_dmaengine_pcm_prepare_slave_config(struct device *dev,
+							struct snd_pcm_substream *substream,
 							struct snd_pcm_hw_params *params,
 							struct snd_dmaengine_dai_dma_data *dma_data,
 							struct dma_slave_config *slave_config)
@@ -270,6 +271,14 @@ static int mchp_asrc_dmaengine_pcm_prepare_slave_config(struct snd_pcm_substream
 		return ret;
 
 	snd_dmaengine_pcm_set_config_from_dai_data(substream, dma_data, slave_config);
+	dev_dbg(dev,
+		"%s() FE AIF dir %s, src addr %#x, dst addr: %#x, src_addr_width %d, dst_addr_width %d, src maxburst %u, dst maxburst %u\n",
+		__func__,
+		slave_config->direction == DMA_MEM_TO_DEV ? "DMA_MEM_TO_DEV" :
+							"DMA_DEV_TO_MEM",
+		slave_config->src_addr, slave_config->dst_addr,
+		slave_config->src_addr_width, slave_config->dst_addr_width,
+		slave_config->src_maxburst, slave_config->dst_maxburst);
 
 	return 0;
 }
@@ -476,8 +485,8 @@ static int mchp_asrc_dma_hw_params(struct snd_soc_component *component,
 		goto __cleanup_free_fe;
 	}
 
-	ret = mchp_asrc_dmaengine_pcm_prepare_slave_config(substream, params, dma_data_fe,
-							   &config_fe);
+	ret = mchp_asrc_dmaengine_pcm_prepare_slave_config(dev, substream, params,
+							   dma_data_fe, &config_fe);
 	if (ret) {
 		dev_err(dev, "failed to prepare DMA config for FE %s\n", cpu_dai->name);
 		goto __cleanup_dma_fe;
@@ -759,8 +768,11 @@ static int mchp_asrc_dma_prepare(struct snd_soc_component *component,
 		}
 		dma_fe_priv->desc = desc;
 
-		dev_dbg(dev, "%s() FE buffer_size %ld, period_size %ld\n", __func__,
-			subs->runtime->buffer_size, subs->runtime->period_size);
+		dev_dbg(dev,
+			"%s() FE buffer_size(periods) %ld, buffer_size(bytes) %u period_size(frames) %ld period_size(bytes) %u\n",
+			__func__,
+			subs->runtime->buffer_size, snd_pcm_lib_buffer_bytes(subs),
+			subs->runtime->period_size, snd_pcm_lib_period_bytes(subs));
 		dma_fe_priv->desc->callback = mchp_asrc_pcm_dma_complete;
 		dma_fe_priv->desc->callback_param = subs;
 	} else {
-- 
2.34.1


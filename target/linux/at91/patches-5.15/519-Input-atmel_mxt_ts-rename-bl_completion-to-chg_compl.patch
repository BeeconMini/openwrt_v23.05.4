From 13532ee1b4426bbd2f243dfbd6d0ffa04d2794de Mon Sep 17 00:00:00 2001
From: Nick Dyer <nick.dyer@itdev.co.uk>
Date: Thu, 19 Mar 2015 16:39:48 +0000
Subject: [PATCH 410/471] Input: atmel_mxt_ts - rename bl_completion to
 chg_completion

Signed-off-by: Nick Dyer <nick.dyer@itdev.co.uk>
[cyrille.pitchen@atmel.com: adapt original patch to mainline]
Signed-off-by: Cyrille Pitchen <cyrille.pitchen@atmel.com>
[eugen.hristev@microchip.com: adapt original patch to 4.14]
Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
[claudiu.beznea@microchip.com: adapt to 4.19]
Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
---
 drivers/input/touchscreen/atmel_mxt_ts.c | 23 +++++++++++------------
 1 file changed, 11 insertions(+), 12 deletions(-)

diff --git a/drivers/input/touchscreen/atmel_mxt_ts.c b/drivers/input/touchscreen/atmel_mxt_ts.c
index c31e0cfe89cd..235c1ead933c 100644
--- a/drivers/input/touchscreen/atmel_mxt_ts.c
+++ b/drivers/input/touchscreen/atmel_mxt_ts.c
@@ -332,15 +332,15 @@ struct mxt_data {
 	u8 T100_reportid_min;
 	u8 T100_reportid_max;
 
-	/* for fw update in bootloader */
-	struct completion bl_completion;
-
 	/* for reset handling */
 	struct completion reset_completion;
 
 	/* for config update handling */
 	struct completion crc_completion;
 
+	/* for power up handling */
+	struct completion chg_completion;
+
 	u32 *t19_keymap;
 	unsigned int t19_num_keys;
 
@@ -565,7 +565,7 @@ static int mxt_check_bootloader(struct mxt_data *data, unsigned int state,
 		 * CHG assertion before reading the status byte.
 		 * Once the status byte has been read, the line is deasserted.
 		 */
-		ret = mxt_wait_for_completion(data, &data->bl_completion,
+		ret = mxt_wait_for_completion(data, &data->chg_completion,
 					      MXT_FW_CHG_TIMEOUT);
 		if (ret) {
 			/*
@@ -1185,11 +1185,10 @@ static irqreturn_t mxt_interrupt(int irq, void *dev_id)
 {
 	struct mxt_data *data = dev_id;
 
-	if (data->in_bootloader) {
-		/* bootloader state transition completion */
-		complete(&data->bl_completion);
+	complete(&data->chg_completion);
+
+	if (data->in_bootloader)
 		return IRQ_HANDLED;
-	}
 
 	if (!data->object_table)
 		return IRQ_HANDLED;
@@ -2911,7 +2910,7 @@ static int mxt_load_fw(struct device *dev, const char *fn)
 		enable_irq(data->irq);
 	}
 
-	reinit_completion(&data->bl_completion);
+	reinit_completion(&data->chg_completion);
 
 	ret = mxt_check_bootloader(data, MXT_WAITING_BOOTLOAD_CMD, false);
 	if (ret) {
@@ -2966,7 +2965,7 @@ static int mxt_load_fw(struct device *dev, const char *fn)
 	}
 
 	/* Wait for flash. */
-	ret = mxt_wait_for_completion(data, &data->bl_completion,
+	ret = mxt_wait_for_completion(data, &data->chg_completion,
 				      MXT_FW_RESET_TIME);
 	if (ret)
 		goto disable_irq;
@@ -2978,7 +2977,7 @@ static int mxt_load_fw(struct device *dev, const char *fn)
 	 * the CHG line after bootloading has finished, so ignore potential
 	 * errors.
 	 */
-	mxt_wait_for_completion(data, &data->bl_completion, MXT_FW_RESET_TIME);
+	mxt_wait_for_completion(data, &data->chg_completion, MXT_FW_RESET_TIME);
 
 	data->in_bootloader = false;
 
@@ -3219,7 +3218,7 @@ static int mxt_probe(struct i2c_client *client, const struct i2c_device_id *id)
 	data->irq = client->irq;
 	i2c_set_clientdata(client, data);
 
-	init_completion(&data->bl_completion);
+	init_completion(&data->chg_completion);
 	init_completion(&data->reset_completion);
 	init_completion(&data->crc_completion);
 
-- 
2.34.1


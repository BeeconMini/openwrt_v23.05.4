#!/bin/sh
# Copyright (C) 2006-2015 OpenWrt.org
# Copyright (C) 2010 Vertical Communications
# Copyright (C) 2018 Jeff Kletsky

failsafe_netlogin () {

	sshd_tmpdir=$(mktemp -d)

	# Note that /etc/shadow in ROM needs a "valid"
	# "date of last password change" (3rd field)
	# or OpenSSH may not permit shell or execution

	local sshd; local dropbear
	local key; local type

	sshd=$(which sshd)
	dropbear=$(which dropbear)

	if [ -x "${sshd}" ] ; then

	for type in rsa ecdsa ed25519; do

		key=${sshd_tmpdir}/ssh_host_${type}_key

		ssh-keygen -N '' -t ${type} -f ${key}

	done

	mkdir -m 0700 -p /var/empty

	cat > ${sshd_tmpdir}/sshd_config <<EOF
HostKey ${sshd_tmpdir}/ssh_host_rsa_key
HostKey ${sshd_tmpdir}/ssh_host_ecdsa_key
HostKey ${sshd_tmpdir}/ssh_host_ed25519_key

Match user root
	PermitRootLogin		yes
	PermitEmptyPasswords	yes

EOF

	${sshd} -f ${sshd_tmpdir}/sshd_config -E ${sshd_tmpdir}/sshd.log

	elif [ -x "${dropbear}" ] ; then

		key=${sshd_tmpdir}/dropbear_failsafe_host_key

		dropbearkey -t rsa -s 1024 -f ${key}
		${dropbear} -r ${key} <> /dev/null 2>&1

	fi
}

failsafe_shell() {
	local console="$(sed -e 's/ /\n/g' /proc/cmdline | grep '^console=' | head -1 | sed -e 's/^console=//' -e 's/,.*//')"
	[ -n "$console" ] || console=console
	[ -c "/dev/$console" ] || return 0
	while true; do
		ash --login <"/dev/$console" >"/dev/$console" 2>"/dev/$console"
		sleep 1
	done &
}

boot_hook_add failsafe failsafe_netlogin
boot_hook_add failsafe failsafe_shell
